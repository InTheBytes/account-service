-- MySQL Script generated by MySQL Workbench
-- Thu Apr  1 20:57:45 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema stacklunch
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema stacklunch
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `stacklunch` DEFAULT CHARACTER SET utf8 ;
USE `stacklunch` ;

-- -----------------------------------------------------
-- Table `stacklunch`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`role` (
  `role_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`user` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_role` INT UNSIGNED NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`),
  INDEX `role_id_idx` (`user_role` ASC) VISIBLE,
  CONSTRAINT `fk_user_role_id`
    FOREIGN KEY (`user_role`)
    REFERENCES `stacklunch`.`role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`menu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`menu` (
  `menu_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`menu_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`hours`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`hours` (
  `hours_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `monday_open` TIME NULL,
  `monday_close` TIME NULL,
  `tuesday_open` TIME NULL,
  `tuesday_close` TIME NULL,
  `wednesday_open` TIME NULL,
  `wednesday_close` TIME NULL,
  `thursday_open` TIME NULL,
  `thursday_close` TIME NULL,
  `friday_open` TIME NULL,
  `friday_close` TIME NULL,
  `saturday_open` TIME NULL,
  `saturday_close` TIME NULL,
  `sunday_open` TIME NULL,
  `sunday_close` TIME NULL,
  PRIMARY KEY (`hours_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`restaurant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`restaurant` (
  `restaurant_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `manager_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `menu_id` INT UNSIGNED NOT NULL,
  `hours_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`restaurant_id`),
  INDEX `manager_id_idx` (`manager_id` ASC) VISIBLE,
  INDEX `menu_id_idx` (`menu_id` ASC) VISIBLE,
  INDEX `hours_id_idx` (`hours_id` ASC) VISIBLE,
  CONSTRAINT `fk_restaurant_manager_id`
    FOREIGN KEY (`manager_id`)
    REFERENCES `stacklunch`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_restaurant_menu_id`
    FOREIGN KEY (`menu_id`)
    REFERENCES `stacklunch`.`menu` (`menu_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_restaurant_hours_id`
    FOREIGN KEY (`hours_id`)
    REFERENCES `stacklunch`.`hours` (`hours_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`genre` (
  `genre_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`genre_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`restaurant_genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`restaurant_genre` (
  `restaurant_id` INT UNSIGNED NOT NULL,
  `genre_id` INT UNSIGNED NOT NULL,
  INDEX `resturant_id_idx` (`restaurant_id` ASC) VISIBLE,
  INDEX `genre_id_idx` (`genre_id` ASC) VISIBLE,
  PRIMARY KEY (`genre_id`, `restaurant_id`),
  CONSTRAINT `fk_restgenre_restaurant_id`
    FOREIGN KEY (`restaurant_id`)
    REFERENCES `stacklunch`.`restaurant` (`restaurant_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_restgenre_genre_id`
    FOREIGN KEY (`genre_id`)
    REFERENCES `stacklunch`.`genre` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`location` (
  `location_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `street` VARCHAR(45) NOT NULL,
  `street_addition` VARCHAR(45) NOT NULL,
  `unit` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `zip_code` INT NOT NULL,
  PRIMARY KEY (`location_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`user_location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`user_location` (
  `user_id` INT UNSIGNED NOT NULL,
  `location_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`user_id`, `location_id`),
  INDEX `location_id_idx` (`location_id` ASC) VISIBLE,
  CONSTRAINT `fk_userloc_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `stacklunch`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_userloc_location_id`
    FOREIGN KEY (`location_id`)
    REFERENCES `stacklunch`.`location` (`location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`restaurant_location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`restaurant_location` (
  `restaurant_id` INT UNSIGNED NOT NULL,
  `location_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`restaurant_id`, `location_id`),
  INDEX `location_id_idx` (`location_id` ASC) VISIBLE,
  CONSTRAINT `fk_restloc_restaurant_id`
    FOREIGN KEY (`restaurant_id`)
    REFERENCES `stacklunch`.`restaurant` (`restaurant_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_restloc_location_id`
    FOREIGN KEY (`location_id`)
    REFERENCES `stacklunch`.`location` (`location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`section`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`section` (
  `section_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`section_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`food`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`food` (
  `food_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `price` FLOAT UNSIGNED NOT NULL,
  `description` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`food_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`section_food`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`section_food` (
  `section_id` INT UNSIGNED NOT NULL,
  `food_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`section_id`, `food_id`),
  INDEX `food_id_idx` (`food_id` ASC) VISIBLE,
  CONSTRAINT `fk_secfood_menu_id`
    FOREIGN KEY (`section_id`)
    REFERENCES `stacklunch`.`section` (`section_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_secfood_food_id`
    FOREIGN KEY (`food_id`)
    REFERENCES `stacklunch`.`food` (`food_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`menu_section`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`menu_section` (
  `menu_id` INT UNSIGNED NOT NULL,
  `section_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`menu_id`, `section_id`),
  INDEX `menuSection_id_idx` (`section_id` ASC) VISIBLE,
  CONSTRAINT `fk_menusec_menu_id`
    FOREIGN KEY (`menu_id`)
    REFERENCES `stacklunch`.`menu` (`menu_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_menusec_section_id`
    FOREIGN KEY (`section_id`)
    REFERENCES `stacklunch`.`section` (`section_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`transaction` (
  `transaction_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `payment_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`transaction_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`order` (
  `order_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `resturant_id` INT UNSIGNED NOT NULL,
  `transaction_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`order_id`),
  INDEX `transaction_id_idx` (`transaction_id` ASC) VISIBLE,
  CONSTRAINT `fk_order_transaction_id`
    FOREIGN KEY (`transaction_id`)
    REFERENCES `stacklunch`.`transaction` (`transaction_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`user_order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`user_order` (
  `user_id` INT UNSIGNED NOT NULL,
  `order_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`user_id`, `order_id`),
  INDEX `order_id_idx` (`order_id` ASC) VISIBLE,
  CONSTRAINT `fk_userorder_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `stacklunch`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_userorder_order_id`
    FOREIGN KEY (`order_id`)
    REFERENCES `stacklunch`.`order` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`order_food`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`order_food` (
  `order_id` INT UNSIGNED NOT NULL,
  `food_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`order_id`, `food_id`),
  INDEX `food_id_idx` (`food_id` ASC) VISIBLE,
  CONSTRAINT `fk_orderfood_order_id`
    FOREIGN KEY (`order_id`)
    REFERENCES `stacklunch`.`order` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orderfood_food_id`
    FOREIGN KEY (`food_id`)
    REFERENCES `stacklunch`.`food` (`food_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stacklunch`.`driver`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `stacklunch`.`driver` (
  `driver_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `vehicle_id` INT UNSIGNED NOT NULL,
  `financial_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`driver_id`),
  INDEX `user_id_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_driver_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `stacklunch`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
